---
import ActivityGroup from './ActivityGroup.astro';
import type { ActivitySidebarData } from '../../bff/report/activitySidebar';

interface Props {
  sidebarData: ActivitySidebarData;
}

const { sidebarData } = Astro.props;
---
<aside id="activity-sidebar" class="sidebar">
  <div class="sidebar-header">
    <h3 class="sidebar-title">当日の活動ログ</h3>
    
    <button id="sidebar-toggle-button" class="toggle-button" aria-label="サイドバーを開閉">
      <svg class="toggle-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M15 18l-6-6 6-6"/>
      </svg>
    </button>
  </div>

  <div class="sidebar-content">
    {sidebarData.groups && sidebarData.groups.length > 0 ? (
      <div class="groups-container">
        {sidebarData.groups.map(group => (
          <ActivityGroup groupData={group} />
        ))}
      </div>
    ) : (
      <div class="empty-state">
        <p>今日の活動はまだありません。</p>
      </div>
    )}
  </div>
</aside>

<script>
  const sidebar = document.getElementById('activity-sidebar');
  const toggleButton = document.getElementById('sidebar-toggle-button');
  
  toggleButton?.addEventListener('click', () => {
    sidebar?.classList.toggle('is-closed');
  });
</script>

<style>
  .sidebar {
    background-color: var(--color-gray-100);
    border-right: 1px solid var(--color-gray-200);

    display: flex;
    flex-direction: column;
    height: 100%;
    width: 400px;
    
    transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .sidebar.is-closed {
    width: 80px;
  }

  .sidebar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    border-bottom: 1px solid var(--color-gray-200);
    flex-shrink: 0;
    transition: justify-content 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .sidebar-title {
    font-size: 1.125rem;
    font-weight: 700;
    transition: opacity 0.2s ease 0.2s, visibility 0.2s, width 0.2s, height 0.2s;
    height: 20px;
  }

  .sidebar-content {
    padding: 1.5rem;
    overflow-y: auto;
    flex-grow: 1;
    transition: opacity 0.2s, visibility 0.2s;
    transition-delay: 0.2s;
  }

  .toggle-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .toggle-button:hover {
    background-color: var(--color-gray-200);
  }

  .toggle-icon {
    transition: transform 0.3s ease-in-out;
  }
  
  /* --- 閉じた状態の内部スタイル --- */
  .sidebar.is-closed .sidebar-title,
  .sidebar.is-closed .sidebar-content {
    opacity: 0;
    width: 0;
    height: 0;
    visibility: hidden;

    transition: opacity 0s, visibility 0s, width 0s, height 0s;
    transition-delay: 0s;
  }

  .sidebar.is-closed .sidebar-header {
    justify-content: center;
    align-items: start;
  }

  .sidebar.is-closed .toggle-icon {
    transform: rotate(180deg);
  }

  .groups-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .empty-state {
    text-align: center;
    padding-top: 4rem;
    color: var(--color-gray-600);
  }
</style>
